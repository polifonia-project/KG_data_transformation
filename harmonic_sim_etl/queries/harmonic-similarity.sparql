# Query to extract data from preprocessed file with harmonic similarity related to Music domain
# and build a Knowledge Graph according to Polifonia ontology network, using sparql.anything
#
# Raw file:
# 
# Polifonia KG ontology: https://github.com/polifonia-project/sonar2021_demo/issues/14


# POLIFONIA prefixes
PREFIX core:    <https://w3id.org/polifonia/ON/core/> 
PREFIX mp:      <https://w3id.org/polifonia/ON/musical-performance/>
PREFIX mc:      <https://w3id.org/polifonia/ON/musical-composition/>
PREFIX mf:      <https://w3id.org/polifonia/ON/musical-feature/>
PREFIX cm:      <https://w3id.org/polifonia/ON/comparative-measure/>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX pr:      <https://w3id.org/polifonia/resource/>

# SPARQL anything prefixes
PREFIX fx:  <http://sparql.xyz/facade-x/ns/>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>


CONSTRUCT { 

    # Recording
    ?recordingAIRI   a mp:Recording ;
                    mf:hasChordProgression ?chordProgressionAIRI ;
                    cm:isHarmonicallySimilarTo ?recordingBIRI ;
                    cm:isInvolvedinHarmonicSimilarity ?harmonicSimIRI .

    ?recordingBIRI a mp:Recording ;
                    mf:hasChordProgression ?chordProgressionBIRI ;
                    cm:isHarmonicallySimilarTo ?recordingAIRI ;
                    cm:isInvolvedinHarmonicSimilarity ?harmonicSimIRI .

    # ChordProgression
    ?chordProgressionAIRI   a mf:ChordProgression ;
                    mf:isChordProgressionOf ?recordingAIRI ;
                    mf:hasStartInRecording ?beginCPA ;
                    mf:hasEndInRecording ?endCPA ;                    
                    cm:isInvolvedinHarmonicSimilarity ?harmonicSimIRI .


    ?chordProgressionBIRI   a mf:ChordProgression ;
                    mf:isChordProgressionOf ?recordingBIRI ;
                    mf:hasStartInRecording ?beginCPB ;
                    mf:hasEndInRecording ?endCPB ;
                    cm:isInvolvedinHarmonicSimilarity ?harmonicSimIRI .


    # HarmonicSimilarity
    ?harmonicSimIRI a cm:HarmonicSimilarity ;
                    cm:involvesRecording ?recordingAIRI ;
                    cm:involvesRecording ?recordingBIRI ;
                    cm:involvesChordProgression ?chordProgressionAIRI ;
                    cm:involvesChordProgression ?chordProgressionAIRI ;
                    cm:hasSimScore ?simScore ;
                    cm:hasSimFunction ?simFunction ;
                    cm:hasEncoding ?encoding .

}
    

    WHERE {


    SERVICE <x-sparql-anything:> {

        fx:properties fx:location "data/harm_sym.json"  ;
        fx:media-type "application/json" ;
        fx:blank-nodes false    .

        
            # Recording with just ID
            ?similarity xyz:harm%5Fsim%5Fid ?harSimID ;
                        xyz:recordingAid ?recordingAid ;
                        xyz:recordingBid ?recordingBid ;
                        xyz:compSimScore ?simScore ;
                        xyz:cp%5Fmatches ?cpMatchesList .

            ?cpMatchesList ?li ?cpMatch .

            ?cpMatch xyz:cp%5Fid ?cpMatchId ;
                    xyz:cpA ?chordProgressionA ;
                    xyz:cpB ?chordProgressionB ;
                    xyz:humanSimScore ?humanSimScore .

            ?chordProgressionA xyz:cp%5Fid ?chordProgressionAid ;
                            xyz:start ?beginCPA ;
                            xyz:end ?endCPA .

            ?chordProgressionB xyz:cp%5Fid ?chordProgressionBid ;
                            xyz:start ?beginCPB ;
                            xyz:end ?endCPB .
            
    } 


    # generate resources IRIs from string IDs
    BIND(IRI(CONCAT( STR(pr:) , "Recording/", ENCODE_FOR_URI(?recordingAid))) AS ?recordingAIRI)
    BIND(IRI(CONCAT( STR(pr:) , "Recording/", ENCODE_FOR_URI(?recordingBid))) AS ?recordingBIRI)
    BIND(IRI(CONCAT( STR(pr:) , "ChordProgression/", ENCODE_FOR_URI(?chordProgressionAid))) AS ?chordProgressionAIRI)
    BIND(IRI(CONCAT( STR(pr:) , "ChordProgression/", ENCODE_FOR_URI(?chordProgressionBid))) AS ?chordProgressionBIRI)
    BIND(IRI(CONCAT( STR(pr:) , "HarmonicSimilarity/", ENCODE_FOR_URI(?harSimID))) AS ?harmonicSimIRI)


} 
